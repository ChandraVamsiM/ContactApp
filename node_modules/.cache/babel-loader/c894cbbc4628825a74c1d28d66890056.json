{"ast":null,"code":"import _objectWithoutProperties from \"E:\\\\delete\\\\contact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport var contactsApi = createApi({\n  reducerPath: \"contactsApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:8000/\"\n  }),\n  tagTypes: [\"Contact\"],\n  endpoints: function endpoints(builder) {\n    return {\n      contacts: builder.query({\n        query: function query() {\n          return \"/contacts\";\n        },\n        providesTags: [\"Contact\"]\n      }),\n      contact: builder.query({\n        query: function query(id) {\n          return \"/contacts/\".concat(id);\n        },\n        providesTags: [\"Contact\"]\n      }),\n      addContact: builder.mutation({\n        query: function query(contact) {\n          return {\n            url: \"/contacts\",\n            method: \"POST\",\n            body: contact\n          };\n        },\n        invalidatesTags: [\"Contact\"]\n      }),\n      deleteContact: builder.mutation({\n        query: function query(id) {\n          return {\n            url: \"/contacts/\".concat(id),\n            method: \"DELETE\"\n          };\n        },\n        invalidatesTags: [\"Contact\"]\n      }),\n      updateContact: builder.mutation({\n        query: function query(_ref) {\n          var id = _ref.id,\n              rest = _objectWithoutProperties(_ref, [\"id\"]);\n\n          return {\n            url: \"/contacts/\".concat(id),\n            method: \"PUT\",\n            body: rest\n          };\n        },\n        invalidatesTags: [\"Contact\"]\n      })\n    };\n  }\n});\nvar useContactsQuery = contactsApi.useContactsQuery,\n    useAddContactMutation = contactsApi.useAddContactMutation,\n    useDeleteContactMutation = contactsApi.useDeleteContactMutation,\n    useContactQuery = contactsApi.useContactQuery,\n    useUpdateContactMutation = contactsApi.useUpdateContactMutation;\nexport { useContactsQuery, useAddContactMutation, useDeleteContactMutation, useContactQuery, useUpdateContactMutation };","map":{"version":3,"names":["createApi","fetchBaseQuery","contactsApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","contacts","query","providesTags","contact","id","addContact","mutation","url","method","body","invalidatesTags","deleteContact","updateContact","rest","useContactsQuery","useAddContactMutation","useDeleteContactMutation","useContactQuery","useUpdateContactMutation"],"sources":["E:/delete/contact-app/src/services/contactsApi.tsx"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nimport { Contact } from \"../models/contactmodel\";\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: \"contactsApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"http://localhost:8000/\",\r\n  }),\r\n  tagTypes: [\"Contact\"],\r\n\r\n  endpoints: (builder) => ({\r\n    contacts: builder.query<Contact[], void>({\r\n      query: () => \"/contacts\",\r\n      providesTags: [\"Contact\"],\r\n    }),\r\n\r\n    contact: builder.query<Contact, string>({\r\n      query: (id) => `/contacts/${id}`,\r\n      providesTags: [\"Contact\"],\r\n    }),\r\n\r\n    addContact: builder.mutation<{}, Contact>({\r\n      query: (contact) => ({\r\n        url: \"/contacts\",\r\n        method: \"POST\",\r\n        body: contact,\r\n      }),\r\n      invalidatesTags: [\"Contact\"],\r\n    }),\r\n\r\n    deleteContact: builder.mutation<void, string>({\r\n      query: (id) => ({\r\n        url: `/contacts/${id}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Contact\"],\r\n    }),\r\n\r\n    updateContact: builder.mutation<void, Contact>({\r\n      query: ({ id, ...rest }) => ({\r\n        url: `/contacts/${id}`,\r\n        method: \"PUT\",\r\n        body: rest,\r\n      }),\r\n      invalidatesTags: [\"Contact\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useContactsQuery,\r\n  useAddContactMutation,\r\n  useDeleteContactMutation,\r\n  useContactQuery,\r\n  useUpdateContactMutation,\r\n} = contactsApi;\r\n"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAGA,OAAO,IAAMC,WAAW,GAAGF,SAAS,CAAC;EACnCG,WAAW,EAAE,aADsB;EAEnCC,SAAS,EAAEH,cAAc,CAAC;IACxBI,OAAO,EAAE;EADe,CAAD,CAFU;EAKnCC,QAAQ,EAAE,CAAC,SAAD,CALyB;EAOnCC,SAAS,EAAE,mBAACC,OAAD;IAAA,OAAc;MACvBC,QAAQ,EAAED,OAAO,CAACE,KAAR,CAA+B;QACvCA,KAAK,EAAE;UAAA,OAAM,WAAN;QAAA,CADgC;QAEvCC,YAAY,EAAE,CAAC,SAAD;MAFyB,CAA/B,CADa;MAMvBC,OAAO,EAAEJ,OAAO,CAACE,KAAR,CAA+B;QACtCA,KAAK,EAAE,eAACG,EAAD;UAAA,2BAAqBA,EAArB;QAAA,CAD+B;QAEtCF,YAAY,EAAE,CAAC,SAAD;MAFwB,CAA/B,CANc;MAWvBG,UAAU,EAAEN,OAAO,CAACO,QAAR,CAA8B;QACxCL,KAAK,EAAE,eAACE,OAAD;UAAA,OAAc;YACnBI,GAAG,EAAE,WADc;YAEnBC,MAAM,EAAE,MAFW;YAGnBC,IAAI,EAAEN;UAHa,CAAd;QAAA,CADiC;QAMxCO,eAAe,EAAE,CAAC,SAAD;MANuB,CAA9B,CAXW;MAoBvBC,aAAa,EAAEZ,OAAO,CAACO,QAAR,CAA+B;QAC5CL,KAAK,EAAE,eAACG,EAAD;UAAA,OAAS;YACdG,GAAG,sBAAeH,EAAf,CADW;YAEdI,MAAM,EAAE;UAFM,CAAT;QAAA,CADqC;QAK5CE,eAAe,EAAE,CAAC,SAAD;MAL2B,CAA/B,CApBQ;MA4BvBE,aAAa,EAAEb,OAAO,CAACO,QAAR,CAAgC;QAC7CL,KAAK,EAAE;UAAA,IAAGG,EAAH,QAAGA,EAAH;UAAA,IAAUS,IAAV;;UAAA,OAAsB;YAC3BN,GAAG,sBAAeH,EAAf,CADwB;YAE3BI,MAAM,EAAE,KAFmB;YAG3BC,IAAI,EAAEI;UAHqB,CAAtB;QAAA,CADsC;QAM7CH,eAAe,EAAE,CAAC,SAAD;MAN4B,CAAhC;IA5BQ,CAAd;EAAA;AAPwB,CAAD,CAA7B;IA+CLI,gB,GAKErB,W,CALFqB,gB;IACAC,qB,GAIEtB,W,CAJFsB,qB;IACAC,wB,GAGEvB,W,CAHFuB,wB;IACAC,e,GAEExB,W,CAFFwB,e;IACAC,wB,GACEzB,W,CADFyB,wB"},"metadata":{},"sourceType":"module"}